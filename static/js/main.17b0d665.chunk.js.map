{"version":3,"sources":["components/TodoContext/index.js","useLocalStorage.js","components/TodoCounters/TodoCounters.js","components/TodoSearch/TodoSearch.js","components/TodoList/TodoList.js","components/TodoItem/TodoItem.js","components/CreateButton/CreateButton.js","components/Modal/Modal.js","components/TodoForm/TodoForm.js","UIAppTask/UIAppTask.js","App/index.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","nameLocalStorage","initialValue","useState","item","setItem","loading","setLoading","error","setError","useEffect","setTimeout","parseitem","localStorageitem","localStorage","getItem","JSON","parse","stringify","saveLocalStorage","changesitem","parseStringfyitem","useLocalStorage","todos","searchValue","setSearchValue","openModal","setOpenModal","counterTaskDone","filter","completed","length","tareas","resultSearch","todo","textTodoLower","text","toLowerCase","searchText","includes","UncompletedTask","textTask","result","map","Provider","value","CompletedTask","completedTask","eliminatedTask","index","newTasks","splice","addTask","listTodo","push","children","TodoCounter","useContext","all","className","TodoSearch","placeholder","onChange","event","valueChange","target","TodoList","TodoItem","onClick","OnComplete","OnDelete","CreateButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","setTexTask","onSubmit","preventDefault","valueChanged","type","UIAppTask","Fragment","i","App","render"],"mappings":"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","file":"static/js/main.17b0d665.chunk.js","sourcesContent":["import React from \"react\";\nimport { useLocalStorage } from \"../../useLocalStorage\";\nconst TodoContext=React.createContext();\n\nfunction TodoProvider(props)\n{\n    const {item:todos, saveLocalStorage,loading,error} = useLocalStorage('TODOS_v1',[]);\n\n    const [searchValue,setSearchValue] = React.useState('');\n    const [openModal, setOpenModal] = React.useState(false);\n    const counterTaskDone = todos.filter((item) => !!item.completed).length;\n    const tareas = todos.length;\n  \n    let resultSearch = [];\n    if(!searchValue.length >= 1)\n    {\n    \n      resultSearch = todos;\n    }\n    else {\n    \n      resultSearch = todos.filter( todo=>{\n        const textTodoLower = todo.text.toLowerCase();\n        const searchText = searchValue.toLowerCase();\n   \n        return textTodoLower.includes(searchText);\n      });\n    \n    }\n  \n    const CompletedTask= (textTask, completedTask)=>{\n      if(completedTask)\n          {\n              UncompletedTask(textTask);\n          }\n          else\n          {\n          const result = todos.map( todo=>{\n            if(textTask === todo.text){\n  \n              return { ...todo, completed: true }\n            }\n            return todo;\n          })\n          saveLocalStorage(result);\n              \n          }\n  \n     \n    }\n    const UncompletedTask= (textTask) => {\n      const result = todos.map(todo => {\n        if (textTask === todo.text) {\n  \n          return { ...todo, completed: false };\n        }\n        return todo;\n      });\n      saveLocalStorage(result);\n    }\n    const eliminatedTask = (index)=>{\n  \n      const newTasks = [...todos];\n      newTasks.splice(index,1);\n      saveLocalStorage(newTasks);\n      \n    }\n    const addTask = (text) =>{\n      const listTodo = [...todos];\n      listTodo.push({\n        text: text,\n        completed:false\n      })\n      saveLocalStorage(listTodo);\n    }\n    \n    return(\n        <TodoContext.Provider value={{\n            loading,\n            error,\n            counterTaskDone ,\n            tareas,\n            searchValue,\n            setSearchValue, \n            resultSearch, \n            CompletedTask,\n            eliminatedTask,\n            openModal,\n            setOpenModal,\n            addTask\n        }}>\n           {props.children} \n        </TodoContext.Provider>\n       \n    );    \n}\nexport {TodoProvider,TodoContext};","import React from \"react\";\nfunction useLocalStorage(nameLocalStorage, initialValue){\n\n    const [item, setItem] = React.useState(initialValue);\n    const [loading, setLoading] = React.useState(true);\n    const [error, setError] = React.useState(false);\n    \n     React.useEffect(()=>{\n       setTimeout(()=>{\n         try\n         {\n          let parseitem;\n          const localStorageitem = localStorage.getItem(nameLocalStorage);\n    \n          if(!localStorageitem)\n          {\n            localStorage.setItem(nameLocalStorage,JSON.stringify(initialValue));\n            parseitem = initialValue;\n          } else{\n            parseitem = JSON.parse(localStorageitem);\n          }\n          setItem(parseitem);\n          setLoading(false);\n         }\n         catch(error)\n         {\n          setError(error);\n         }\n    \n       }, 1000)\n     })\n      \n      \n      const saveLocalStorage = (changesitem) =>{\n        try{\n          const parseStringfyitem = JSON.stringify(changesitem);\n          localStorage.setItem(nameLocalStorage,parseStringfyitem);\n          setItem(changesitem);\n        }\n        catch(error)\n        {\n          setError(error);\n        }\n        \n      }\n      return {item, saveLocalStorage,loading,error};\n}\nexport {useLocalStorage};","import React from \"react\";\nimport './TodoCounter.css';\nimport { TodoContext } from \"../TodoContext\";\nconst estilos={\n   color: 'red',\n   backgroundColor: 'yellow',\n};\n\nfunction TodoCounter(){\nconst {counterTaskDone:completed, tareas:all} = React.useContext(TodoContext);\n return(\n    <h2 className=\"TodoCounter\"> had completedss {completed} from {all} all list</h2>\n )\n}\n\nexport {TodoCounter};","import React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport './TodoSearch.css';\nfunction TodoSearch()\n{\n  \n const {setSearchValue,searchValue} = React.useContext(TodoContext)  \n const onSearchValueChange = (event) =>{\n    let valueChange = event.target.value;\n    setSearchValue(valueChange);\n }\n\n//  const OnSearchValueChange = (event) =>{\n//    console.log(event);\n//  }\n\n return(\n   <input \n      className=\"TodoSearch\" \n      placeholder =\"word search\"\n      value={searchValue}\n      onChange={onSearchValueChange}\n   />\n  )\n}\nexport { TodoSearch };","import React from \"react\";\n\nfunction TodoList(props){\n    return (\n        <section>\n            {props.children}\n        </section>\n    );\n}\nexport { TodoList };","import React from \"react\";\nimport './TodoItem.css'\nfunction TodoItem(props){\n\n\n    return (\n        <li className=\"TodoItem\">\n            <span \n                className={`Icon Icon-check ${props.completed && 'Icon-check-active'}`}\n                onClick={ props.OnComplete}\n            >\n             √\n            </span>\n            <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n                {props.text}\n            </p>\n            <span \n                className=\"Icon Icon-delete\"\n                onClick={props.OnDelete}\n            >\n                X\n            </span>\n    \n        </li>\n    );\n}\nexport { TodoItem };","import React from \"react\";\nimport './CreateButton.css';\n\n\nfunction CreateButton(props){\n\n    \n    const onClickButton = () =>{\n        props.setOpenModal(prevState => !prevState);\n    }\n\n    return(\n        <button \n            className=\"CreateButton\"\n            onClick={ onClickButton}\n        >\n            +\n        </button>\n    );\n\n}\n\nexport {CreateButton};","import React from \"react\"\nimport ReactDOM from \"react-dom\";\nimport './Modal.css';\n\nfunction Modal({children})\n{\n\n    return ReactDOM.createPortal(\n       <div className=\"ModalBackground\">\n           {children}\n       </div>,\n       document.getElementById('modal')\n    );\n\n}\n\nexport {Modal}","import React from \"react\";\nimport { TodoContext } from \"../TodoContext\";\nimport './TodoForm.css';\nfunction TodoForm()\n{\n    const [textTask,setTexTask] = React.useState('');\n    const {\n        addTask,\n        setOpenModal\n    } = React.useContext(TodoContext)\n\n    const WriteText = (event)=>{\n        const valueChanged = event.target.value;\n        setTexTask(valueChanged);\n    }\n    const OnCancel = ()=>{\n        setOpenModal(false);\n    }\n\n    const OnSubmit = (event)=>{\n        event.preventDefault();\n        addTask(textTask);\n        setOpenModal(false);\n        \n    }\n    return(\n\n        \n       <form onSubmit={OnSubmit}>\n        <label>Escribe tu nuevo TODO</label>\n        <textarea\n         placeholder=\"Cortar la cebolla en el almuerzo\"\n         value={textTask}\n         onChange={WriteText}\n        />\n        <div className=\"TodoForm-buttonContainer \">\n            <button\n             type=\"button\"\n             className=\"TodoForm-button TodoForm-button-cancel \"\n             onClick={OnCancel}\n            >\n                cancel\n            </button>  \n            <button\n             className=\"TodoForm-button TodoForm-button-add\"\n             type=\"submit\"\n            >\n                Añadir\n            </button>    \n        </div>\n       </form>\n    )\n}\nexport {TodoForm}","import React from \"react\";\nimport {TodoCounter} from \"../components/TodoCounters/TodoCounters\";\nimport { TodoSearch } from \"../components/TodoSearch/TodoSearch\";\nimport { TodoList } from \"../components/TodoList/TodoList\";\nimport { TodoItem } from \"../components/TodoItem/TodoItem\";\nimport { CreateButton } from \"../components/CreateButton/CreateButton\";\nimport  {TodoContext} from \"../components/TodoContext\";\nimport { Modal } from \"../components/Modal/Modal\";\nimport { TodoForm } from \"../components/TodoForm/TodoForm\";\n\nfunction UIAppTask()\n{\n  const { \n    error,\n    loading,\n    resultSearch,\n    CompletedTask,\n    eliminatedTask,\n    tareas,\n    openModal,\n    setOpenModal\n  } = React.useContext(TodoContext); \n    return(\n        \n    <React.Fragment>\n      <TodoCounter\n\n      />\n      <TodoSearch\n        \n      />\n     \n     <TodoList>\n            {error && <p>Algo salio mal ;(</p>}\n            {loading && <p>estamos cargando  no deseperes</p>}\n            {(!loading && !tareas) && <p>Crea tu primer Tarea</p>}\n            {resultSearch.map((todo,i) =>(\n              <TodoItem \n                key={todo.text} \n                text ={todo.text}\n                completed = {todo.completed}\n                OnComplete = {()=>CompletedTask(todo.text, todo.completed)}  \n                OnDelete = { ()=>eliminatedTask(i)}\n              />\n            ))}\n      </TodoList>\n      {\n        openModal && (\n        <Modal>\n          <TodoForm/>\n        </Modal>)\n      }\n     \n     \n      <CreateButton\n        setOpenModal = {setOpenModal}\n       \n      />\n      \n    </React.Fragment>\n    )\n\n}\n\nexport {UIAppTask};","//import './App.css';\nimport React from \"react\";\nimport  {UIAppTask}  from \"../UIAppTask/UIAppTask\";\nimport { TodoProvider } from \"../components/TodoContext\";\nfunction App() {\n\n\n  return (\n    <TodoProvider>\n      <UIAppTask/>\n    </TodoProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/index';\n\nReactDOM.render(\n    <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}